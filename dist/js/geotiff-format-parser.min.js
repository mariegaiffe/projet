"use strict";function GeotiffParser(){this.tiffDataView=void 0,this.littleEndian=void 0,this.imageWidth=void 0,this.imageLength=void 0,this.bitsPerPixel=void 0,this.samplesPerPixel=void 0,this.photometricInterpretation=void 0,this.compression=void 0,this.fileDirectories=[],this.sampleProperties=[],this.geoKeys=[],this.blocks=[],this.colorMapValues=[],this.colorMapSampleSize=void 0,this.isPixelArea=0,this.planarConfiguration=1,this.extraSamplesValues=[],this.numExtraSamples=0}GeotiffParser.prototype={isLittleEndian:function(){var e=this.getBytes(2,0);if(18761===e)this.littleEndian=!0;else{if(19789!==e)throw console.log(e),TypeError("Invalid byte order value.");this.littleEndian=!1}return this.littleEndian},hasTowel:function(){if(42!==this.getBytes(2,2))throw RangeError("You forgot your towel!");return!0},getLinearUnitsName:function(e){var t;switch(e){case 0:t="undefined";break;case 9001:t="Linear_Meter";break;case 9002:t="Linear_Foot";break;case 9003:t="Linear_Foot_US_Survey";break;case 9004:t="Linear_Foot_Modified_American";break;case 9005:t="Linear_Foot_Clarke ";break;case 9006:t="Linear_Foot_Indian ";break;case 9007:t="Linear_Link ";break;case 9008:t="Linear_Link_Benoit ";break;case 9009:t="Linear_Link_Sears";break;case 9010:t="Linear_Chain_Benoit";break;case 9011:t="Linear_Chain_Sears";break;case 9012:t="Linear_Yard_Sears";break;case 9013:t="Linear_Yard_Indian";break;case 9014:t="Linear_Fathom";break;case 9015:t="user-Linear_Mile_International_Nautical";break;default:e>=9e3&&9099>=e?t="EPSG Linear Units":e>=9100&&9199>=e?t="EPSG Angular Units":(e=32767)?t="user-defined unit":e>32767&&(t="Private User Implementations")}return t},getAngularUnitsName:function(e){var t;switch(e){case 0:t="undefined";break;case 9001:t="Angular_Radian";break;case 9002:t="Angular_Degree";break;case 9003:t="Angular_Arc_Minute";break;case 9004:t="Angular_Arc_Second";break;case 9005:t="Angular_Grad";break;case 9006:t="Angular_Gon";break;case 9007:t="Angular_DMS";break;case 9008:t="Angular_DMS_Hemisphere";break;default:e>=9e3&&9099>=e?t="EPSG Linear Units":e>=9100&&9199>=e?t="EPSG Angular Units":(e=32767)?t="user-defined unit":e>32767&&(t="Private User Implementations")}return t},getModelTypeName:function(e){var t;switch(e){case 0:t="undefined";break;case 1:t="ModelTypeProjected";break;case 2:t="ModelTypeGeographic";break;case 3:t="ModelTypeGeocentric";break;case 32767:t="user-defined";break;default:32767>e?t="GeoTIFF Reserved Codes":e>32767&&(t="Private User Implementations")}return t},getRasterTypeName:function(e){var t;switch(e){case 0:t="undefined";break;case 1:t="RasterPixelIsArea";break;case 2:t="RasterPixelIsPoint";break;case 32767:t="user-defined";break;default:32767>e?t="GeoTIFF Reserved Codes":e>32767&&(t="Private User Implementations")}return t},getGeoKeyName:function(e){var t,i={1024:"GTModelTypeGeoKey",1025:"GTRasterTypeGeoKey",1026:"GTCitationGeoKey",2048:"GeographicTypeGeoKey",2049:"GeogCitationGeoKey",2050:"GeogGeodeticDatumGeoKey",2051:"GeogPrimeMeridianGeoKey",2052:"GeogLinearUnitsGeoKey",2053:"GeogLinearUnitSizeGeoKey",2054:"GeogAngularUnitsGeoKey",2055:"GeogAngularUnitSizeGeoKey",2056:"GeogEllipsoidGeoKey",2057:"GeogSemiMajorAxisGeoKey",2058:"GeogSemiMinorAxisGeoKey",2059:"GeogInvFlatteningGeoKey",2060:"GeogAzimuthUnitsGeoKey",2061:"GeogPrimeMeridianLongGeoKey",2062:"GeogTOWGS84GeoKey",3072:"ProjectedCSTypeGeoKey",3073:"PCSCitationGeoKey",3074:"ProjectionGeoKey",3075:"ProjCoordTransGeoKey",3076:"ProjLinearUnitsGeoKey",3077:"ProjLinearUnitSizeGeoKey",3078:"ProjStdParallel1GeoKey",3079:"ProjStdParallel2GeoKey",3080:"ProjNatOriginLongGeoKey",3081:"ProjNatOriginLatGeoKey",3082:"ProjFalseEastingGeoKey",3083:"ProjFalseNorthingGeoKey",3084:"ProjFalseOriginLongGeoKey",3085:"ProjFalseOriginLatGeoKey",3086:"ProjFalseOriginEastingGeoKey",3087:"ProjFalseOriginNorthingGeoKey",3088:"ProjCenterLongGeoKey",3089:"ProjCenterLatGeoKey",3090:"ProjCenterEastingGeoKey",3091:"ProjCenterNorthingGeoKey",3092:"ProjScaleAtNatOriginGeoKey",3093:"ProjScaleAtCenterGeoKey",3094:"ProjAzimuthAngleGeoKey",3095:"ProjStraightVertPoleLongGeoKey",3096:"ProjRectifiedGridAngleGeoKey",4096:"VerticalCSTypeGeoKey",4097:"VerticalCitationGeoKey",4098:"VerticalDatumGeoKey",4099:"VerticalUnitsGeoKey"};return e in i?t=i[e]:(console.log("Unknown geoKey :",e),t=e+"GeoKey"),t},getFieldTagName:function(e){var t,i={315:"Artist",258:"BitsPerSample",265:"CellLength",264:"CellWidth",320:"ColorMap",259:"Compression",33432:"Copyright",306:"DateTime",338:"ExtraSamples",266:"FillOrder",289:"FreeByteCounts",288:"FreeOffsets",291:"GrayResponseCurve",290:"GrayResponseUnit",316:"HostComputer",270:"ImageDescription",257:"ImageLength",256:"ImageWidth",271:"Make",281:"MaxSampleValue",280:"MinSampleValue",272:"Model",254:"NewSubfileType",274:"Orientation",262:"PhotometricInterpretation",284:"PlanarConfiguration",296:"ResolutionUnit",278:"RowsPerStrip",277:"SamplesPerPixel",305:"Software",279:"StripByteCounts",273:"StripOffsets",255:"SubfileType",263:"Threshholding",282:"XResolution",283:"YResolution",326:"BadFaxLines",327:"CleanFaxData",343:"ClipPath",328:"ConsecutiveBadFaxLines",433:"Decode",434:"DefaultImageColor",269:"DocumentName",336:"DotRange",321:"HalftoneHints",346:"Indexed",347:"JPEGTables",285:"PageName",297:"PageNumber",317:"Predictor",319:"PrimaryChromaticities",532:"ReferenceBlackWhite",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",559:"StripRowCounts",330:"SubIFDs",292:"T4Options",293:"T6Options",325:"TileByteCounts",323:"TileLength",324:"TileOffsets",322:"TileWidth",301:"TransferFunction",318:"WhitePoint",344:"XClipPathUnits",286:"XPosition",529:"YCbCrCoefficients",531:"YCbCrPositioning",530:"YCbCrSubSampling",345:"YClipPathUnits",287:"YPosition",37378:"ApertureValue",40961:"ColorSpace",36868:"DateTimeDigitized",36867:"DateTimeOriginal",34665:"Exif IFD",36864:"ExifVersion",33434:"ExposureTime",41728:"FileSource",37385:"Flash",40960:"FlashpixVersion",33437:"FNumber",42016:"ImageUniqueID",37384:"LightSource",37500:"MakerNote",37377:"ShutterSpeedValue",37510:"UserComment",33723:"IPTC",34675:"ICC Profile",700:"XMP",42112:"GDAL_METADATA",42113:"GDAL_NODATA",34377:"Photoshop",33550:"ModelPixelScale",33922:"ModelTiepoint",34264:"ModelTransformation",34735:"GeoKeyDirectory",34736:"GeoDoubleParams",34737:"GeoAsciiParams"};return e in i?t=i[e]:(console.log("Unknown Field Tag:",e),t="Tag"+e),t},getPhotometricName:function(e){var t,i={0:"PHOTOMETRIC_MINISWHITE",1:"PHOTOMETRIC_MINISBLACK",2:"PHOTOMETRIC_RGB",3:"PHOTOMETRIC_PALETTE",4:"PHOTOMETRIC_MASK",5:"PHOTOMETRIC_SEPARATED",6:"PHOTOMETRIC_YCBCR",8:"PHOTOMETRIC_CIELAB",9:"PHOTOMETRIC_ICCLAB",10:"PHOTOMETRIC_ITULAB",32844:"PHOTOMETRIC_LOGL",32845:"PHOTOMETRIC_LOGLUV"};return t=e in i?i[e]:"UNKNOWN"},getCompressionTypeName:function(e){var t,i={1:"COMPRESSION_NONE",2:"COMPRESSION_CCITTRLE",3:"COMPRESSION_CCITTFAX3",4:"COMPRESSION_CCITTFAX4",5:"COMPRESSION_LZW",6:"COMPRESSION_OJPEG",7:"COMPRESSION_JPEG",32766:"COMPRESSION_NEXT",32771:"COMPRESSION_CCITTRLEW",32773:"COMPRESSION_PACKBITS",32809:"COMPRESSION_THUNDERSCAN",32895:"COMPRESSION_IT8CTPAD",32896:"COMPRESSION_IT8LW",32897:"COMPRESSION_IT8MP",32898:"COMPRESSION_IT8BL",32908:"COMPRESSION_PIXARFILM",32909:"COMPRESSION_PIXARLOG",32946:"COMPRESSION_DEFLATE",8:"COMPRESSION_ADOBE_DEFLATE",32947:"COMPRESSION_DCS",34661:"COMPRESSION_JBIG",34676:"COMPRESSION_SGILOG",34677:"COMPRESSION_SGILOG24",34712:"COMPRESSION_JP2000"};return t=e in i?i[e]:"UNKNOWN"},getFieldTypeName:function(e){var t,i={1:"BYTE",2:"ASCII",3:"SHORT",4:"LONG",5:"RATIONAL",6:"SBYTE",7:"UNDEFINED",8:"SSHORT",9:"SLONG",10:"SRATIONAL",11:"FLOAT",12:"DOUBLE"};return e in i&&(t=i[e]),t},getFieldTypeLength:function(e){var t;return-1!==["BYTE","ASCII","SBYTE","UNDEFINED"].indexOf(e)?t=1:-1!==["SHORT","SSHORT"].indexOf(e)?t=2:-1!==["LONG","SLONG","FLOAT"].indexOf(e)?t=4:-1!==["RATIONAL","SRATIONAL","DOUBLE"].indexOf(e)&&(t=8),t},getBits:function(e,t,i){i=i||0;var a=Math.floor(i/8),r=t+a,o=i+e,s=32-e;if(0>=o)throw console.log(e,t,i),RangeError("No bits requested");if(8>=o)var l=24+i,n=this.tiffDataView.getUint8(r,this.littleEndian);else if(16>=o)var l=16+i,n=this.tiffDataView.getUint16(r,this.littleEndian);else{if(!(32>=o))throw console.log(e,t,i),RangeError("Too many bits requested");var l=i,n=this.tiffDataView.getUint32(r,this.littleEndian)}var h={bits:n<<l>>>s,byteOffset:r+Math.floor(o/8),bitOffset:o%8};return h},getBytes:function(e,t){if(0>=e)throw console.log(e,t),RangeError("No bytes requested");if(1>=e)return this.tiffDataView.getUint8(t,this.littleEndian);if(2>=e)return this.tiffDataView.getUint16(t,this.littleEndian);if(3>=e)return this.tiffDataView.getUint32(t,this.littleEndian)>>>8;if(4>=e)return this.tiffDataView.getUint32(t,this.littleEndian);if(8>=e)return this.tiffDataView.getFloat64(t,this.littleEndian);throw RangeError("Too many bytes requested")},getSampleBytes:function(e,t,i){switch(e){case 1:case 2:return this.getBytes(t,i);case 3:if(3==t)return this.tiffDataView.getFloat32(i,this.littleEndian)>>>8;if(4==t)return this.tiffDataView.getFloat32(i,this.littleEndian);case 5:case 6:case 4:default:throw Error("Do not attempt to parse the data  not handled  : "+e)}},getFieldValues:function(e,t,i,a){var r=[],o=this.getFieldTypeLength(t),s=o*i;if(4>=s){if(this.littleEndian===!1)var l=a>>>8*(4-o);else var l=a;r.push(l)}else for(var n=0;i>n;n++){var h=o*n;o>=8?-1!==["RATIONAL","SRATIONAL"].indexOf(t)?(r.push(this.getBytes(4,a+h)),r.push(this.getBytes(4,a+h+4))):-1!==["DOUBLE"].indexOf(t)?r.push(this.getBytes(8,a+h)):console.log(" fff"+t,i,s):r.push(this.getBytes(o,a+h))}return"ASCII"===t&&r.forEach(function(e,t,i){i[t]=String.fromCharCode(e)}),r},clampColorSample:function(e,t){var i=Math.pow(2,8-t);return Math.floor(e*i+(1-i))},clampAffineColorSample:function(e,t,i,a){var r=Math.pow(2,8)/a;return Math.floor((e-i)*r)},makeRGBAFillValue:function(e,t,i,a){return"undefined"==typeof a&&(a=1),"rgba("+e+", "+t+", "+i+", "+a+")"},parseFileDirectory:function(e){for(var t=this.getBytes(2,e),i=[],a=e+2,r=0;t>r;a+=12,r++){var o=this.getBytes(2,a),s=this.getBytes(2,a+2),l=this.getBytes(4,a+4),n=this.getBytes(4,a+8),h=this.getFieldTagName(o),p=this.getFieldTypeName(s),u=this.getFieldValues(h,p,l,n);i[h]={type:p,values:u}}this.fileDirectories.push(i);var f=this.getBytes(4,a);return 0===f?this.fileDirectories:this.parseFileDirectory(f)},isGeotiff:function(){var e=this.fileDirectories[0];if("undefined"==typeof e.GeoKeyDirectory||null==e.GeoKeyDirectory||"undefined"==typeof e.GeoKeyDirectory.values||null==e.GeoKeyDirectory.values)return!1;var t=e.GeoKeyDirectory.values;return t.length<4?!1:!0},getPlanarConfiguration:function(){var e=this.fileDirectories[0];return 0==e.hasOwnProperty("PlanarConfiguration")||0==e.PlanarConfiguration.hasOwnProperty("values")||null==e.PlanarConfiguration.values?1:e.PlanarConfiguration.values[0]},getSampleFormat:function(){var e=this.fileDirectories[0];return 0==e.hasOwnProperty("SampleFormat")||0==e.SampleFormat.hasOwnProperty("values")||null==e.SampleFormat.values?1:e.SampleFormat.values[0]},getSampleMinMax:function(){var e=this.fileDirectories[0];return 0==e.hasOwnProperty("SMaxSampleValue")||0==e.SMaxSampleValue.hasOwnProperty("values")||null==e.SMaxSampleValue.values?-1:0==e.hasOwnProperty("SMinSampleValue")||0==e.SMinSampleValue.hasOwnProperty("values")||null==e.SMinSampleValue.values?-1:[e.SMinSampleValue.values,e.SMaxSampleValue.values]},isBlockLoaded:function(e){for(var t=this.blocks,i=0;i<t.length;i++)if(null!=this.blocks[i]&&this.blocks[i].offset==e)return i;return-1},getBlock:function(e){for(var t=this.blocks,i=0;i<t.length;i++)if(null!=this.blocks[i]&&this.blocks[i].offset==e)return this.blocks[i];return null},addBlock:function(e,t){this.blocks[e]=t},hasStripOffset:function(){var e=this.fileDirectories[0];return"undefined"==typeof e.StripOffsets||null==e.StripOffsets||"undefined"==typeof e.StripOffsets.values||null==e.StripOffsets.values?!1:!0},hasTileOffset:function(){var e=this.fileDirectories[0];return 0==e.hasOwnProperty("TileOffsets")||0==e.TileOffsets.hasOwnProperty("values")||null==e.TileOffsets.values?!1:!0},parseGeoKeyDirectory:function(){var e=this.fileDirectories[0];if(0!=this.isGeotiff()){for(var t=e.GeoKeyDirectory.values[3],i=[],a=0;t>a;a++){var r=e.GeoKeyDirectory.values[4+4*a],o=e.GeoKeyDirectory.values[5+4*a],s=e.GeoKeyDirectory.values[6+4*a],l=e.GeoKeyDirectory.values[7+4*a],n="undefined";if(0==o)n=l;else if("GeoKeyDirectory"==this.getFieldTagName(o))console.log("ent_key ="+this.getGeoKeyName(r)),console.log("ent_count ="+s),console.log("ent_val_offset ="+l),console.log("GeoKeyDirectory =");else if("GeoDoubleParams"==this.getFieldTagName(o)){var h=e.GeoDoubleParams.values;n=h[l]}else if("GeoAsciiParams"==this.getFieldTagName(o)){var p="",u=e.GeoAsciiParams.values;if("undefined"!=l&&"undefined"!=s&&s>0&&s-1>=l){for(var f=l;s-1>f;f++)p+=u[f];"|"!=u[s-1]&&(p+=u[s-1])}n=p}i[this.getGeoKeyName(r)]={value:n}}this.geoKeys=i,0==this.geoKeys.hasOwnProperty("GTRasterTypeGeoKey")&&(this.isPixelArea=0),"RasterPixelIsArea"==this.getRasterTypeName(this.geoKeys.GTRasterTypeGeoKey.value)&&(this.isPixelArea=1)}},consoleTiffProperty:function(){console.log("--------------- Tiff property -------------------"),console.log("Image : w="+this.imageWidth+" h="+this.imageLength),console.log("BitsPerPixel="+this.bitsPerPixel),console.log("SamplesPerPixel="+this.samplesPerPixel),console.log("PlanarConfiruration="+this.planarConfiguration),console.log("Photometric ="+this.getPhotometricName(this.photometricInterpretation)),console.log("Compression ="+this.getCompressionTypeName(this.compression)),console.log("SampleFormat : ",this.getSampleFormat()),console.log("getSampleMinMax : ",this.getSampleMinMax());var e=this.fileDirectories[0];if(this.hasStripOffset()){var t=e.StripOffsets.values.length;console.log("Has Strips nb offsetvalues count:"+t)}if(this.hasTileOffset()){var t=e.TileOffsets.values.length;console.log("Has Tiles  offsetvalues count:"+t)}},consoleGeotiffProperty:function(){console.log("--------------- GeoTiff property -------------------");var e=this.fileDirectories[0],t=e.GeoKeyDirectory.values[0],i=e.GeoKeyDirectory.values[1],a=e.GeoKeyDirectory.values[2],r=e.GeoKeyDirectory.values[3];console.log("hdr_version ="+e.GeoKeyDirectory+" "+t),console.log("hdr_rev_major ="+e.GeoKeyDirectory+" "+i),console.log("hdr_rev_minor ="+e.GeoKeyDirectory+" "+a),console.log("hdr_num_keys ="+e.GeoKeyDirectory+" "+r),this.consoleCRSProperty(),console.log("pixelSize ="+this.getPixelSize())},consoleTestGeorefImage:function(){var e=2,t=2,i=this.ImageToPCS(e,t);1==i[0]?console.log(" ImageToPCS "+i[1]+" "+i[2]):console.log(" ImageToPCS failure");var a=this.PCSToImage(i[1],i[2]);1==a[0]?console.log(" PCSToImage "+a[1]+" "+a[2]):console.log(" PCSToImage failure")},parseHeader:function(e){if(this.tiffDataView=new DataView(e),this.littleEndian=this.isLittleEndian(this.tiffDataView),this.hasTowel(this.tiffDataView,this.littleEndian)){var t=this.getBytes(4,4);this.fileDirectories=this.parseFileDirectory(t);var i=this.fileDirectories[0];this.imageWidth=i.ImageWidth.values[0],this.imageLength=i.ImageLength.values[0],this.photometricInterpretation=i.PhotometricInterpretation.values[0],this.samplesPerPixel=i.SamplesPerPixel.values[0],this.bitsPerPixel=0,i.BitsPerSample.values.forEach(function(e,t,i){this.sampleProperties[t]={bitsPerSample:e,hasBytesPerSample:!1,bytesPerSample:void 0},e%8===0&&(this.sampleProperties[t].hasBytesPerSample=!0,this.sampleProperties[t].bytesPerSample=e/8),this.bitsPerPixel+=e},this),this.compression=i.Compression?i.Compression.values[0]:1,i.ColorMap&&(this.colorMapValues=i.ColorMap.values,this.colorMapSampleSize=Math.pow(2,this.sampleProperties[0].bitsPerSample)),i.ExtraSamples&&(this.extraSamplesValues=i.ExtraSamples.values,this.numExtraSamples=this.extraSamplesValues.length),i.hasOwnProperty("PlanarConfiguration")&&1==i.PlanarConfiguration.hasOwnProperty("values")&&(this.planarConfiguration=i.PlanarConfiguration.values[0]),this.parseGeoKeyDirectory()}},decodeBlock:function(e,t,i){var a=[],r=1,o=[],s=this.getSampleFormat();switch(this.compression){case 1:case 5:var l=0,n=!1;if(this.bitsPerPixel%8===0){n=!0;var h=this.bitsPerPixel/8}if(!n)throw r=0,RangeError("Cannot handle sub-byte bits per pixel");r=h;for(var p=0;t>p;p+=r){for(var u=0,o=[];u<this.samplesPerPixel;u++){if(!this.sampleProperties[u].hasBytesPerSample){var f=this.getBits(this.sampleProperties[u].bitsPerSample,e+p,l);throw o.push(f.bits),p=f.byteOffset-e,l=f.bitOffset,RangeError("Cannot handle sub-byte bits per sample")}var m=this.sampleProperties[u].bytesPerSample*u;o.push(this.getSampleBytes(s,this.sampleProperties[u].bytesPerSample,e+p+m))}a.push(o)}if(5==this.compression){LZString.decompressFromUint8Array(a)}break;case 32946:var c=new i.Inflate,l=0,n=!1;if(this.bitsPerPixel%8===0){n=!0;var h=this.bitsPerPixel/8}if(!n)throw r=0,RangeError("Cannot handle sub-byte bits per pixel");r=h;for(var P=!1,p=0;t>p;p+=r){for(var u=0,o=[];u<this.samplesPerPixel;u++){if(!this.sampleProperties[u].hasBytesPerSample){var f=this.getBits(this.sampleProperties[u].bitsPerSample,e+p,l);throw o.push(f.bits),p=f.byteOffset-e,l=f.bitOffset,RangeError("Cannot handle sub-byte bits per sample")}var m=this.sampleProperties[u].bytesPerSample*u;o.push(this.getBytes(this.sampleProperties[u].bytesPerSample,e+p+m))}p+r>=t&&(P=!0),c.push(o,P)}c.err&&console.log(c.msg),a.push(c.result);break;case 32773:for(var g=0,d=0,y=0,S=!0,p=0;t>p;p+=r){if(S){S=!1;var v=1,T=1,C=this.tiffDataView.getInt8(e+p,this.littleEndian);C>=0&&127>=C?v=C+1:C>=-127&&-1>=C?T=-C+1:S=!0}else{for(var G=this.getBytes(1,e+p),u=0;T>u;u++){if(!this.sampleProperties[d].hasBytesPerSample)throw RangeError("Cannot handle sub-byte bits per sample");g=g<<8*y|G,y++,y===this.sampleProperties[d].bytesPerSample&&(o.push(g),g=y=0,d++),d===this.samplesPerPixel&&(a.push(o),o=[],d=0)}v--,0===v&&(S=!0)}r=1}break;default:throw Error("Do not attempt to parse the data Compression not handled  : "+this.getCompressionTypeName(this.compression))}var M={offset:e,value:a};return M},getDecompressionModule:function(e,t,i){var i=void 0;return 32946==this.compression&&define(function(e){i=e("pako_inflate")}),i},loadPixels:function(){for(var e=[],t=0,i=0;i<this.imageLength;i++)for(var a=0;a<this.imageWidth;a++)for(var r=this.getPixelValueOnDemand(a,i),o=0;o<this.samplesPerPixel;o++)e[t]=r[o],t++;return e},getRGBAPixelValue:function(e){var t=0,i=0,a=0,r=1;if(this.numExtraSamples>0)for(var o=0;o<this.numExtraSamples;o++)if(1===this.extraSamplesValues[o]||2===this.extraSamplesValues[o]){r=e[3+o]/256;break}var s=[];switch(this.photometricInterpretation){case 0:if(this.sampleProperties[0].hasBytesPerSample)var l=Math.pow(16,2*this.sampleProperties[0].bytesPerSample);e.forEach(function(e,t,i){i[t]=l-e});case 1:t=i=a=this.clampColorSample(e[0],this.sampleProperties[0].bitsPerSample);break;case 2:if(1==this.samplesPerPixel?t=i=a=this.clampColorSample(e[0],this.sampleProperties[0].bitsPerSample):this.samplesPerPixel>2&&(t=this.clampColorSample(e[0],this.sampleProperties[0].bitsPerSample),i=this.clampColorSample(e[1],this.sampleProperties[1].bitsPerSample),a=this.clampColorSample(e[2],this.sampleProperties[2].bitsPerSample)),4==this.samplesPerPixel){var n=Math.pow(2,this.sampleProperties[0].bitsPerSample);r=e[3]/n}break;case 3:if(void 0===this.colorMapValues)throw Error("Palette image missing color map");var h=e[0];t=this.clampColorSample(this.colorMapValues[h],16),i=this.clampColorSample(this.colorMapValues[this.colorMapSampleSize+h],16),a=this.clampColorSample(this.colorMapValues[2*this.colorMapSampleSize+h],16);break;default:throw RangeError(" Photometric Interpretation Not Yet Implemented::",getPhotometricName(this.photometricInterpretation))}return s=[t,i,a,r]},getMinMaxPixelValue:function(e,t,i){var a=0,r=0,o=0,s=1;if(this.numExtraSamples>0)for(var l=0;l<this.numExtraSamples;l++)if(1===this.extraSamplesValues[l]||2===this.extraSamplesValues[l]){s=e[3+l]/256;break}var n=[];switch(this.photometricInterpretation){case 0:if(this.sampleProperties[0].hasBytesPerSample)var h=Math.pow(16,2*this.sampleProperties[0].bytesPerSample);e.forEach(function(e,t,i){i[t]=h-e});case 1:a=r=o=this.clampAffineColorSample(e[0],this.sampleProperties[0].bitsPerSample,t,i);break;case 2:if(1==this.samplesPerPixel?a=r=o=this.clampAffineColorSample(e[0],this.sampleProperties[0].bitsPerSample,t,i):this.samplesPerPixel>2&&(a=this.clampAffineColorSample(e[0],this.sampleProperties[0].bitsPerSample,t,i),r=this.clampAffineColorSample(e[1],this.sampleProperties[1].bitsPerSample,t,i),o=this.clampAffineColorSample(e[2],this.sampleProperties[2].bitsPerSample,t,i)),4==this.samplesPerPixel){var p=Math.pow(2,this.sampleProperties[0].bitsPerSample);s=e[3]/p}break;case 3:if(void 0===this.colorMapValues)throw Error("Palette image missing color map");var u=e[0];a=this.clampAffineColorSample(this.colorMapValues[u],16,t,i),r=this.clampAffineColorSample(this.colorMapValues[this.colorMapSampleSize+u],16,t,i),o=this.clampAffineColorSample(this.colorMapValues[2*this.colorMapSampleSize+u],16,t,i);break;default:throw RangeError(" Photometric Interpretation Not Yet Implemented::",getPhotometricName(this.photometricInterpretation))}return n=[a,r,o,s]},getClosestPixelValue:function(e,t){e=Math.floor(e),t=Math.floor(t);var i=this.fileDirectories[0],a=0,r=[],o=0,s=[],l=0,n=this.getDecompressionModule(),h=e,p=t,u=0,f=[];if(this.hasStripOffset()){i.RowsPerStrip?(l=i.RowsPerStrip.values[0],a=Math.floor(t/l)):l=this.imageLength,r=i.StripOffsets.values,u=this.imageWidth;var m=this.isBlockLoaded(r[a]);if(-1==m){if(i.StripByteCounts)s=i.StripByteCounts.values;else{if(console.log("Missing StripByteCounts!"),1!==o)throw Error("Cannot recover from missing StripByteCounts");s=[Math.ceil(this.imageWidth*this.imageLength*bitsPerPixel/8)]}f=this.decodeBlock(r[a],s[a],n),this.addBlock(a,f)}else f=this.blocks[m];p=t%l}else if(this.hasTileOffset()){r=i.TileOffsets.values;var c=i.TileLength.values[0],P=i.TileWidth.values[0],g=Math.floor(e/P),d=Math.floor(t/c),y=Math.ceil(this.imageWidth/P);a=d*y+g,u=P;var m=this.isBlockLoaded(r[a]);-1==m?(s=i.TileByteCounts.values,f=this.decodeBlock(r[a],s[a],n),this.addBlock(a,f)):f=this.blocks[m],h=e%P,p=t%c}var S=p*u+h;return f.value[S]},getPixelValueOnDemand:function(e,t){if(1!=this.planarConfiguration)throw"Other Planar Configuration is not yet implemented";if(this.isPixelArea)return this.getClosestPixelValue(e,t);var i=Math.floor(e+.5),a=Math.floor(t+.5);return this.getClosestPixelValue(i,a)},getCRSCode:function(){var e=0;return 0==this.geoKeys.hasOwnProperty("GTModelTypeGeoKey")?0:("ModelTypeGeographic"==this.getModelTypeName(this.geoKeys.GTModelTypeGeoKey.value)&&this.geoKeys.hasOwnProperty("GeographicTypeGeoKey")?e=this.geoKeys.GeographicTypeGeoKey.value:"ModelTypeProjected"==this.getModelTypeName(this.geoKeys.GTModelTypeGeoKey.value)&&this.geoKeys.hasOwnProperty("ProjectedCSTypeGeoKey")?e=this.geoKeys.ProjectedCSTypeGeoKey.value:"user-defined"==this.getModelTypeName(this.geoKeys.GTModelTypeGeoKey.value)&&(this.geoKeys.hasOwnProperty("ProjectedCSTypeGeoKey")?e=this.geoKeys.ProjectedCSTypeGeoKey.value:this.geoKeys.hasOwnProperty("GeographicTypeGeoKey")?e=this.geoKeys.GeographicTypeGeoKey.value:this.geoKeys.hasOwnProperty("GTCitationGeoKey")&&-1!=this.geoKeys.GTCitationGeoKey.value.search("WGS_1984_Web_Mercator_Auxiliary_Sphere")?e=3857:this.consoleCRSProperty()),e)},consoleCRSProperty:function(){var e=[1024,1026],t=[2048,2061],i=[3072,3073],a=[3074,3094],r=[4096,4099];this.test_consoleGeoKeys("GeoTIFF Configuration GeoKeys",e),this.test_consoleGeoKeys("Geographic CS Parameter GeoKeys",t),this.test_consoleGeoKeys("Projected CS Parameter GeoKeys",i),this.test_consoleGeoKeys("Projection Definition GeoKeys",a),this.test_consoleGeoKeys("Vertical CS Parameter Keys",r)},test_consoleGeoKeys:function(e,t){console.log(e);for(var i=t[0];i<=t[1];i++){var a=this.getGeoKeyName(i);this.geoKeys.hasOwnProperty(a)&&console.log(a+" "+this.geoKeys[a].value)}},isPixelArea:function(){return 0==this.geoKeys.hasOwnProperty("GTRasterTypeGeoKey")?!0:"RasterPixelIsArea"==this.getRasterTypeName(this.geoKeys.GTRasterTypeGeoKey.value)?!0:!1},getPixelValue:function(e,t,i){if(1!=this.getPlanarConfiguration())throw"Other Planar Configuration is not yet implemented";var a=[];if(0>t||t>=this.imageWidth||0>i||i>=this.imageLength)return a;for(var r=this.samplesPerPixel*(i*this.imageWidth+t),o=0;o<this.samplesPerPixel;o++)a[o]=e[r+o];return a},getLowResPixelValue:function(e,t,i){if(1!=this.getPlanarConfiguration())throw"Other Planar Configuration is not yet implemented";var a=[];if(0>t||t>=this.imageWidth||0>i||i>=this.imageLength)return a;for(var r=this.samplesPerPixel*(i*this.imageWidth+t),o=t<this.imageWidth?t+1:t,s=this.samplesPerPixel*(i*this.imageWidth+o),l=this.samplesPerPixel*(i*this.imageWidth+t),n=this.samplesPerPixel*((i<this.imageLength?i+1:i)*this.imageWidth+o),h=0;h<this.samplesPerPixel;h++){var p=(e[r+h]+e[s+h]+e[l+h]+e[n+h])/4;a[h]=Math.round(p)}return a},toCanvas:function(e,t,i,a,r,o,s){var l=e||document.createElement("canvas");if(null==l.getContext)throw RangeError("No Context for canvas");var n=l.getContext("2d");l.width=a-t,l.height=r-t;var h=[];n.fillStyle=this.makeRGBAFillValue(255,255,255,0);for(var p=i;r>p;p++)for(var u=t;a>u;u++){var f=this.getPixelValueOnDemand(u,p);h="undefined"!=f?"undefined"!=o&&"undefined"!=s?this.getMinMaxPixelValue(f,o,s):this.getRGBAPixelValue(f):[255,0,0,1],n.fillStyle=this.makeRGBAFillValue(h[0],h[1],h[2],h[3]),n.fillRect(u-t,p-i,1,1)}return l},getPixelSize:function(){var e=["undefined","undefined"],t=this.fileDirectories[0];if("undefined"!=typeof t.ModelPixelScale&&null!=t.ModelPixelScale&&"undefined"!=typeof t.ModelPixelScale.values&&null!=t.ModelPixelScale.values)return t.ModelPixelScale.values;var i=this.ImageToPCS(0,0),a=this.ImageToPCS(1,0),r=this.ImageToPCS(0,1);if(0==i[0]||0==a[0]||0==r[0])return e;var o=[a[1]-i[1],r[2]-i[2]];return o},GTIFTiepointTranslate:function(e,t,i,a){var r=this.fileDirectories[0];r.ModelTiepoint.values;return[0,t,i]},GetBBox:function(){var e=this.getCRSCode(),t=this.ImageToPCS(0,0),i=this.ImageToPCS(this.imageWidth,0),a=this.ImageToPCS(0,this.imageLength),r=this.ImageToPCS(this.imageWidth,this.imageLength);if(1!=t[0]||1!=i[0]||1!=a[0]||1!=r[0])throw TypeError("BBox error");var o=[];o.push(t.splice(1,2)),o.push(a.splice(1,2)),o.push(r.splice(1,2)),o.push(i.splice(1,2));var s="EPSG:"+e.toString(),l={WKID:e.toString(),EPSG:s,coord:o,ulidx:0,llidx:1,lridx:2,uridx:3};return l},ImageToPCS:function(e,t){var i,a,r,o=[0,e,t],s=this.fileDirectories[0];if("undefined"==typeof s.ModelTiepoint||null==s.ModelTiepoint||"undefined"==typeof s.ModelTiepoint.values||null==s.ModelTiepoint.values)i=0;else{var l=s.ModelTiepoint.values;i=l.length}if("undefined"==typeof s.ModelPixelScale||null==s.ModelPixelScale||"undefined"==typeof s.ModelPixelScale.values||null==s.ModelPixelScale.values)a=0;else{var n=s.ModelPixelScale.values;a=n.length}if("undefined"==typeof s.ModelTransformation||null==s.ModelTransformation||"undefined"==typeof s.ModelTransformation.values||null==s.ModelTransformation.values)r=0;else{var h=s.ModelTransformation.values;r=h.length}if(i>6&&0==a)console.log(" tiepoint_count ",i),o=this.GTIFTiepointTranslate(i/6,e,t,!0);else if(16==r){var p=s.ModelTransformation.values,u=e,f=t;e=u*p[0]+f*p[1]+p[3],t=u*p[4]+f*p[5]+p[7],o=[1,e,t]}else if(3>a||6>i)o=[0,e,t];else{var m=s.ModelPixelScale.values,c=s.ModelTiepoint.values;e=(e-c[0])*m[0]+c[3],t=(t-c[1])*(-1*m[1])+c[4],o=[1,e,t]}return o},inv_geotransform:function(e){var t,i,a=[0,0,0,0,0,0];return t=e[0]*e[4]-e[1]*e[3],Math.abs(t)<1e-15?[0,a]:(i=1/t,a[0]=e[4]*i,a[3]=-e[3]*i,a[1]=-e[1]*i,a[4]=e[0]*i,a[2]=(e[1]*e[5]-e[2]*e[4])*i,a[5]=(-e[0]*e[5]+e[2]*e[3])*i,[1,a])},PCSToImage:function(e,t){var i,a,r=[0,e,t],o=0,s=this.fileDirectories[0];if("undefined"==typeof s.ModelTiepoint||null==s.ModelTiepoint||"undefined"==typeof s.ModelTiepoint.values||null==s.ModelTiepoint.values)i=0;else{var l=s.ModelTiepoint.values;i=l.length}if("undefined"==typeof s.ModelPixelScale||null==s.ModelPixelScale||"undefined"==typeof s.ModelPixelScale.values||null==s.ModelPixelScale.values)a=0;else{var n=s.ModelPixelScale.values;a=n.length}if("undefined"==typeof s.ModelTransformation||null==s.ModelTransformation||"undefined"==typeof s.ModelTransformation.values||null==s.ModelTransformation.values)o=0;else{var h=s.ModelTransformation.values;o=h.length}if(i>6&&0==a)r=this.GTIFTiepointTranslate(i/6,e,t,!1);else if(16==o){var p=s.ModelTransformation.values,u=e,f=t,m=[0,0,0,0,0,0];m[0]=p[0],m[1]=p[1],m[2]=p[3],m[3]=p[4],m[4]=p[5],m[5]=p[7];var c=this.inv_geotransform(m);if(c[0]){var P=c[1];e=u*P[0]+f*P[1]+P[2],t=u*P[3]+f*P[4]+P[5],r=[1,e,t]}else r=[0,e,t]}else if(a>=3&&i>=6){var g=s.ModelPixelScale.values,d=s.ModelTiepoint.values;e=(e-d[3])/g[0]+d[0],t=(t-d[4])/(-1*g[1])+d[1],r=[1,e,t]}return r}};